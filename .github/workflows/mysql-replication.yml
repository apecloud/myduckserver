name: MySQL Binlog Replication Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GTID_ENABLED: [true, false]
        TEST_GROUP: ["Group 1", "Group 2"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        go get .
        pip3 install "sqlglot[rs]"
        curl -LJO https://github.com/duckdb/duckdb/releases/download/v1.1.3/duckdb_cli-linux-amd64.zip
        unzip duckdb_cli-linux-amd64.zip
        chmod +x duckdb
        sudo mv duckdb /usr/local/bin
        duckdb -c 'INSTALL json from core'
        duckdb -c 'SELECT extension_name, loaded, install_path FROM duckdb_extensions() where installed'

    - name: Build
      run: go build -v

    - name: Test Binlog Replication With GTID ${{ matrix.GTID_ENABLED }} - ${{ matrix.TEST_GROUP }}
      run: |
        if [ "${{ matrix.TEST_GROUP }}" = "Group 1" ]; then
          go test -v -p 1 --timeout 600s ./binlogreplication -run '^TestBinlogReplication' | tee replication.log
        else
          go test -v -p 1 --timeout 600s ./binlogreplication -skip '^TestBinlogReplication' | tee replication.log
        fi
        cat replication.log | grep -e "^--- " | sed 's/--- //g' | awk 'BEGIN {count=1} {printf "%d. %s\n", count++, $0}'
        cat replication.log | grep -q "FAIL" && exit 1 || exit 0
