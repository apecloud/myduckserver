name: PostgreSQL Replication E2E Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  replication-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          go get .
          pip3 install "sqlglot[rs]" pyarrow pandas
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
          
          # Install DuckDB CLI and extensions
          curl -LJO https://github.com/duckdb/duckdb/releases/download/v1.1.3/duckdb_cli-linux-amd64.zip
          unzip duckdb_cli-linux-amd64.zip
          chmod +x duckdb
          sudo mv duckdb /usr/local/bin
          duckdb -c 'INSTALL json from core'
          
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

      - name: Build MyDuck
        run: go build -v

      - name: Start MinIO service
        run: |
          docker run \
            -p 9001:9000 \
            -p 9091:9090 \
            -e "MINIO_ROOT_USER=minioadmin" \
            -e "MINIO_ROOT_PASSWORD=minioadmin" \
            -v /Users/neo/minio/data:/data \
            --name minio \
            --detach=true \
            quay.io/minio/minio server /data --console-address ":9090"
          
          # Wait for MinIO to be ready
          for i in {1..30}; do
            if curl -I http://127.0.0.1:9001/minio/health/live|grep -q '200 OK'; then
              break
            fi
            sleep 1
          done

